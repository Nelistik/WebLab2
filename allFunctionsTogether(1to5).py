#Все функции из Заданий №№1-5 вместе (для демонстрации работы см. отчёт/файлы "task №":

#Задание №1. Функция для проверки палиндромов.
def palindrome (num: int): #функция, принимающая на вход int
    num = str(num) #преобразование int в строку
    return num == num[::-1] #возврат T/F после сравнения


#Задание №2. Функция, возвращающая три списка (%2==0, %3==0, %4==0).
def aliquot(num_list):
    al_2 = [n for n in num_list
            if n%2 == 0]
    al_3 = [n for n in num_list
            if n%3 == 0]
    al_4 = [n for n in num_list
            if n%4 == 0]
    return al_2, al_3, al_4


#Задание №3. Функция, возвращающая инверсированную числовую часть числа (не меняет знак).
def inverse(num: int):
    if num>=0:  #если число неотрицательное
        num_r = str(num)        #инициализация строки 
        num_r = num_r[::-1]     #разворот строки
    else:       #если число отрицательное      
        num_r = [d for d in str(num)]   #инициализация и заполнение списка
        num_r = num_r[::-1]             #разворот списка
        num_r.insert(0, num_r.pop(-1))  #перенос минуса в начало списка
    return int(''.join(num_r))  #возврат int


#Задание №4. Функция, возвращающее значение арифметического корня n-ной степени (метод Ньютона).
def Sqrt(num: float, n:int): #параметры: число и степень
    x = num/2
    for i in range(1000):
        x = (1/n) * ((n-1)*x + num/x**(n-1))
    return x


#Задание №5. Функция, осуществляющая проверку, простое ли число или нет (диапазон от 1 до 100000).
def SimpleOrNot(num):
    if num<1 or num>100000: #проверка на принадлежность диапазону [1;100000]
        return
    k = 0
    for i in range(2, num // 2+1):
        if (num % i == 0):
            k = k+1
    return k <= 0
